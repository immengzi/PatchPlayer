<Window x:Class="Recommend_Sys.MainWindow"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Recommend_Sys"
        xmlns:media="https://github.com/mysteryx93/MediaPlayerUI.NET"
        xmlns:viewModels="clr-namespace:Recommend_Sys.ViewModels"
        mc:Ignorable="d"
        Title="歌曲适配" Height="600" Width="800"
        WindowStyle="None"
        >
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    <Window.DataContext>
        <viewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <!-- 为按钮定义样式 -->
        <Style x:Key="Nav" TargetType="Button">
            <Setter Property="Margin" Value="15" />
            <Setter Property="MaxHeight" Value="70" />
            <Setter Property="MinHeight" Value="40"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="White"/>
        </Style >
        <!-- 为图标定义样式 -->
        <Style x:Key="Icon" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24" />
            <Setter Property="FontFamily" Value="../Resources/Fonts/#iconfont" />
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource WindowTextBrush}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverOverlayBackgroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PressedOverlayBackgroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                            <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource MouseOverWindowCloseButtonBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{DynamicResource PressedWindowCloseButtonBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource MouseOverWindowCloseButtonForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <!-- 标题栏 -->
        <Grid Height="60" VerticalAlignment="Top" Background="#aeaeae">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image
		Grid.Column="0"
		Width="22"
		Height="22"
		Margin="4"
		Source="/Resources/img/music.svg" />
            <TextBlock
		Grid.Column="1"
		Margin="4 0 0 0"
		VerticalAlignment="Center"
		FontSize="20"
		Text="{Binding WindowTitle}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource WindowTitleBarInactiveText}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <Button
		Grid.Column="2"
		Click="OnMinimizeButtonClick"
		RenderOptions.EdgeMode="Aliased"
		Style="{StaticResource TitleBarButtonStyle}">
                <Path
			Width="46"
			Height="32"
			Data="M 18,15 H 28"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
            </Button>
            <Button
		Name="maximizeButton"
		Grid.Column="3"
		Click="OnMaximizeRestoreButtonClick"
		Style="{StaticResource TitleBarButtonStyle}">
                <Path
			Width="46"
			Height="32"
			Data="M 18.5,10.5 H 27.5 V 19.5 H 18.5 Z"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
            </Button>
            <Button
		Name="restoreButton"
		Grid.Column="3"
		Click="OnMaximizeRestoreButtonClick"
		Style="{StaticResource TitleBarButtonStyle}">
                <Path
			Width="46"
			Height="32"
			Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
            </Button>
            <Button
		Grid.Column="4"
		Click="OnCloseButtonClick"
		Style="{StaticResource TitleBarCloseButtonStyle}">
                <Path
			Width="46"
			Height="32"
			Data="M 18,11 27,20 M 18,20 27,11"
			Stroke="{Binding Path=Foreground,
							 RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
			StrokeThickness="1" />
            </Button>
        </Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!-- 导航栏 -->
            <Grid Grid.Column="0">
                <StackPanel x:Name="ButtonGroup" Margin="0,60">
                    <Button x:Name="button1" Style="{StaticResource Nav}" Click="button1_Click" >
                        <StackPanel>
                            <TextBlock x:Name="HomeIcon" Text="{Binding HomeIcon}" Style="{StaticResource Icon}"/>
                            <TextBlock Text="主页"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="button2" Style="{StaticResource Nav}" Click="button2_Click">
                        <StackPanel>
                            <TextBlock x:Name="LoveIcon" Text="{Binding LoveIcon}" Style="{StaticResource Icon}"/>
                            <TextBlock Text="喜欢"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="button3" Style="{StaticResource Nav}" Click="button3_Click">
                        <StackPanel>
                            <TextBlock x:Name="PlayGroundIcon" Text="{Binding PlaygroundIcon}" Style="{StaticResource Icon}"/>
                            <TextBlock Text="推荐"/>
                        </StackPanel>
                    </Button>
                    <Button x:Name="button4" Style="{StaticResource Nav}" Click="button4_Click">
                        <StackPanel>
                            <TextBlock x:Name="UserIcon" Text="{Binding UserIcon}" Style="{StaticResource Icon}"/>
                            <TextBlock Text="用户"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>

            <!-- 其他内容 -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!-- 当前主页面 -->
                <ContentControl Content="{Binding CurrentPage}"/>
                <!-- 播放器 -->
                <media:MediaPlayer x:Name="Player" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">
                    <!--<media:NAudioPlayerHost Source="../../../Resources/mp3/test.mp3" AutoPlay="False"/>-->
                    <media:NAudioPlayerHost Source="{Binding SongSource}" AutoPlay="True"/>
                </media:MediaPlayer>
            </Grid>
        </Grid>
    </Grid>
</Window>
